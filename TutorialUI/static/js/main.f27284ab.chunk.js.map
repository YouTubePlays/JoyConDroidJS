{"version":3,"sources":["components/Tutorial.js","components/Faq.js","components/Legal.js","App.js","i18n.js","serviceWorker.js","index.js"],"names":["imgs","withNamespaces","props","t","useState","selected","setSelected","showThumbs","onChange","index","map","value","key","style","height","src","alt","verticalAlign","objectFit","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightBold","body","fontWeightRegular","classes","className","returnObjects","question","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","dangerouslySetInnerHTML","__html","blackColor","color","grayColor","PathWithRouter","withRouter","URLSearchParams","location","search","get","App","path","render","i18n","use","Backend","LanguageDetector","reactI18nextModule","init","fallbackLng","debug","backend","loadPath","lng","ns","console","log","interpolation","escapeValue","react","wait","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f27284ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\n\nconst imgs = [\n    \"image_4\",\n    \"image_5\",\n    \"image_6\",\n    \"image_7\",\n    \"image_8\",\n    \"image_9\",\n    \"image_10\",\n    \"image_12\",\n    \"image_13\",\n    \"image_14\"\n];\n\nfunction Tutorial(props) {\n    const { t } = props;\n    const [selected, setSelected] = useState(0);\n    return (\n        <div>\n            <h2>\n                {t(`explanations.e${selected + 1}`)}\n            </h2>\n            <Carousel\n                showThumbs={false}\n                onChange={(index) => setSelected(index)}\n            >\n                {imgs.map((value, index) =>\n                    (<div key={value} style={{height: '50vh'}}>\n                        <img src={t(`images.${value}`)} alt=\"Tutorial\" style={{\n                            verticalAlign: 'middle',\n                            objectFit: 'contain',\n                            height: '100%'\n                          }}/>\n                    </div>)\n                )}\n            </Carousel>\n\n        </div>\n    );\n};\n\nexport default withNamespaces()(Tutorial);","import React from 'react';\nimport { withNamespaces } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightBold,\n    },\n    body: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\n\n\nfunction Faq(props) {\n    const { t } = props;\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            {t('faq.questions', { returnObjects: true }).map((question, index) => (\n                <Accordion>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography className={classes.heading}>{question}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Typography className={classes.body}>\n                            <div dangerouslySetInnerHTML={{ __html: t('faq.answers', { returnObjects: true })[index]}} />\n                        </Typography>\n                    </AccordionDetails>\n                </Accordion>\n            ))}\n        </div>\n    );\n}\nexport default withNamespaces()(Faq);","import React from 'react';\nimport { withNamespaces } from 'react-i18next';\n\nconst blackColor = {\n    color: '#000'\n};\n\nconst grayColor = {\n    color: '#888'\n};\n\nfunction Legal(props) {\n    const { t } = props;\n    return (\n        <div>\n            <h2><span style={blackColor}>{t('legalAndDisclaimer.appInfoTitle')}</span></h2>\n            <p style={grayColor}>{t('legalAndDisclaimer.ai1')}</p>\n            <p style={grayColor}>{t('legalAndDisclaimer.ai2')}</p>\n            <p style={grayColor}>{t('legalAndDisclaimer.ai3')}</p>\n            <p style={grayColor}>\n                {t('legalAndDisclaimer.ai4')}\n                <ul style={grayColor}>\n                    <li style={grayColor}>{t('sony')}</li>\n                    <li style={grayColor}>{t('xiaomi')}</li>\n                    <li style={grayColor}>{t('lg')}</li>\n                    <li style={grayColor}>{t('oneplus')}</li>\n                    <li style={grayColor}>{t('huawei')}</li>\n                </ul>\n            </p>\n            <p style={grayColor}>{t('legalAndDisclaimer.ai5')}</p>\n            <br />\n            <h2><span style={blackColor}>{t('legalAndDisclaimer.disclaimerTitle')}</span></h2>\n            <p style={grayColor}>{t('legalAndDisclaimer.d1')}</p>\n            <p style={grayColor}>{t('legalAndDisclaimer.d2')}</p>\n        </div>\n    );\n}\nexport default withNamespaces()(Legal);","import React from 'react';\nimport { Route, BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport Tutorial from './components/Tutorial';\nimport Faq from './components/Faq';\nimport Legal from './components/Legal';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route path='/' render={() => <PathWithRouter/>} />\n    </Router>\n  );\n}\n\n\nfunction Path(props) {\n  const query = new URLSearchParams(props.location.search);\n  const page = query.get('page');\n  switch (page) {\n    case 'faq': return (<Faq />);\n    case 'legal': return (<Legal/>);\n    default: return (<Tutorial />);\n  }\n}\n\nconst PathWithRouter = withRouter(Path);\nexport default App;\n","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { reactI18nextModule } from 'react-i18next';\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    backend: {\n      loadPath: (lng, ns) => {\n        console.log(lng + ',' + ns);\n        return `locales/${lng}/translation.json`\n      }\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n\n    react: {\n      wait: true,\n    },\n  });\n\nexport default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}